@page "/"
@using Diceware.Library

@inject WordListService wordListService;
@inject EntropyService entropyService;

<div class="root-container">
    <div class="word-count">
        <span class="label">Words count:</span>
        <input class="value" type="range" min="4" max="12" @bind-value="@wordCount" @bind-value:event="oninput"/>
        <span class="confirm value">@wordCount</span>
    </div>

    <div class="extra-security">
        <label class="label" for="extra-security">Extra security:</label>
        <input class="value" type="checkbox" id="extra-security" @bind-value="@extraSecurity"/>
    </div>

    <button class="generate" @onclick="GeneratePassphrase">Generate passphrase</button>

    <div class="passphrase-result">
        <span class="label">Result:</span>
        <span class="value result">@passphrase</span>
        <div class="value entropy">
            Length: <span class="emphasis">@passphrase.Length</span>, entropy: <span class="emphasis">@entropy</span> bits, @strength
        </div>
    </div>
</div>

@code {
    private int wordCount = 6;
    private bool extraSecurity = false;

    private string passphrase = string.Empty;
    private double entropy;
    private string strength = string.Empty;

    private async Task GeneratePassphrase()
    {
        Dictionary<int, string> words = await wordListService.GetWordList();

        passphrase = Passphrase.Generate(wordCount, words, extraSecurity);

        entropy = Math.Round(await entropyService.Compute(passphrase, extraSecurity), 1);
        strength = EntropyCalculator.StrengthLevelToEnglishText(EntropyCalculator.EntropyToStrengthLevel(entropy));
    }
}
